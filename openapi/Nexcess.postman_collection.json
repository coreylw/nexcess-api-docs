{
	"info": {
		"_postman_id": "ba1f3914-3bb8-4ac7-96ae-cddba669f5ec",
		"name": "Nexcess",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"{{USERNAME}}\",\n\t\"password\": \"{{PASSWORD}}\"\n}"
						},
						"url": {
							"raw": "{{PORTAL_API_URL}}/v1/login",
							"host": [
								"{{PORTAL_API_URL}}"
							],
							"path": [
								"v1",
								"login"
							]
						},
						"description": "Client user authentication with a username and password.\n\nA successful response includes a time-limited Bearer token to be included in the Authorization header on subsequent requests.\n\nThis endpoint is mainly intended for use by web applications, which would store the token for use during the user's logged-in session. (When the token expires, requests will recieve 401 responses.) For general API usage, an api token should be used instead. @see api-token:add"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User (self)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PORTAL_API_URL}}/v1/user/self",
							"host": [
								"{{PORTAL_API_URL}}"
							],
							"path": [
								"v1",
								"user",
								"self"
							]
						},
						"description": "Shows information about the currently-authenticated client user."
					},
					"response": []
				}
			]
		},
		{
			"name": "API Tokens",
			"item": [
				{
					"name": "Create API Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fec6e53-17bf-4652-9ba2-f54beeb13ec4",
								"exec": [
									"pm.test(\"Save new token ID\", function () {",
									"    pm.response.to.have.status(201);",
									"    ",
									"    var data = pm.response.json();",
									"    pm.environment.set(\"TOKEN_ID\", data.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test-name\"\n}"
						},
						"url": {
							"raw": "{{PORTAL_API_URL}}/v1/api-token",
							"host": [
								"{{PORTAL_API_URL}}"
							],
							"path": [
								"v1",
								"api-token"
							]
						},
						"description": "Creates a new api token.\n\nThe new api token is returned in the response payload. This is the only time it will be accessible to the user; it will never be displayed again."
					},
					"response": []
				},
				{
					"name": "List API Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7790661-b6d0-43f2-af8f-ad84011bbc21",
								"exec": [
									"pm.test(\"Save first token ID in list\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var data = pm.response.json();",
									"    pm.environment.set(\"TOKEN_ID\", data[0].id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PORTAL_API_URL}}/v1/api-token",
							"host": [
								"{{PORTAL_API_URL}}"
							],
							"path": [
								"v1",
								"api-token"
							]
						},
						"description": "Lists api tokens that belong to the logged-in user."
					},
					"response": []
				},
				{
					"name": "Get API Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b85b1ec7-07e4-4e1e-9e07-d9b88c161979",
								"exec": [
									"pm.test(\"Save token ID\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var data = pm.response.json();",
									"    pm.environment.set(\"TOKEN_ID\", data.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PORTAL_API_URL}}/v1/api-token/{{TOKEN_ID}}",
							"host": [
								"{{PORTAL_API_URL}}"
							],
							"path": [
								"v1",
								"api-token",
								"{{TOKEN_ID}}"
							]
						},
						"description": "Shows an api token."
					},
					"response": []
				},
				{
					"name": "Update API Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test-name\"\n}"
						},
						"url": {
							"raw": "{{PORTAL_API_URL}}/v1/api-token/{{TOKEN_ID}}",
							"host": [
								"{{PORTAL_API_URL}}"
							],
							"path": [
								"v1",
								"api-token",
								"{{TOKEN_ID}}"
							]
						},
						"description": "Edits an api token.\n\nEdit requests are queued, meaning they will be completed out-of-band from the current request. The response payload will describe the requested task, and will also include a Location header that can be polled to determine the status of the task. @see task:show."
					},
					"response": []
				},
				{
					"name": "Delete API Token",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{PORTAL_API_URL}}/v1/api-token/{{TOKEN_ID}}",
							"host": [
								"{{PORTAL_API_URL}}"
							],
							"path": [
								"v1",
								"api-token",
								"{{TOKEN_ID}}"
							]
						},
						"description": "Deletes an api token.\n\nDelete requests are queued, meaning they will be completed out-of-band from the current request. The response payload will describe the requested task, and will also include a Location header that can be polled to determine the status of the task. @see task:show."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{PORTAL_API_TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9a76e276-6426-4051-a9ac-ee69cbbbbee9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f3ff1529-b308-4958-b534-7b3efe89101c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cfc0f1f6-7270-4e97-9c92-27d0a38b1135",
			"key": "PORTAL_API_URL",
			"value": "",
			"type": "string"
		},
		{
			"id": "6419b07e-0faf-48b5-99ab-65732da00181",
			"key": "USERNAME",
			"value": "user@example.com",
			"type": "string"
		},
		{
			"id": "a6f41a73-2ea8-4fb9-b6c6-70385bd108c1",
			"key": "PASSWORD",
			"value": "KlaatuBaradaNikto",
			"type": "string"
		},
		{
			"id": "d193a4a1-c869-45a6-bf89-c7f71837c1b4",
			"key": "PORTAL_API_KEY",
			"value": "",
			"type": "string"
		},
		{
			"id": "af5eeefb-ae87-4ac0-b975-0cfd0d44ded0",
			"key": "TOKEN_ID",
			"value": "",
			"type": "string"
		}
	]
}